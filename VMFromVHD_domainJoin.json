{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "ImageUri": {
            "type": "string",
            "metadata": {
                "description": "Uri of the existing Image"
            }
        },
        "osType": {
            "defaultValue": "Windows",
            "allowedValues": [
                "Windows",
                "Linux"
            ],
            "type": "string",
            "metadata": {
                "description": "Type of OS on the existing vhd"
            }
        },
        "vmSize": {
            "defaultValue": "Standard_D3_v2",
            "allowedValues": [
                "Standard_DS1_V2",
                "Standard_D3",
                "Standard_D4",
                "Standard_D3_v2",
                "Standard_D4_v2",
                "Standard_A4"
            ],
            "type": "string",
            "metadata": {
                "description": "Azure VM size for VM-Series"
            }
        },
        "vmName": {
            "type": "string",
            "metadata": {
                "description": "Name of the virtual machine"
            }
        },
        "virtualNetworkName": {
            "defaultValue": "AZ-EA-VN-001",
            "type": "string",
            "metadata": {
                "description": "Name of the Virtual Network (VNET)"
            }
        },
        "virtualNetworkResourceGroupName": {
            "defaultValue": "AZ-EA-RG-SVC-001",
            "type": "string",
            "metadata": {
                "description": "Name of resource group of existing VNET"
            }
        },
        "subnetName": {
            "defaultValue": "AZ-EA-SN-DEV_TEST-VN-001-10.35.7.024",
            "type": "string",
            "metadata": {
                "description": "Subnet for Management"
            }
        },
        "adminUsername": {
            "defaultValue": "customAdmin",
            "type": "string",
            "metadata": {
                "description": "Username of the administrator account of VM-Series"
            }
        },
        "adminPassword": {
            "defaultValue": "#Passw0rd123",
            "type": "securestring",
            "metadata": {
                "description": "Password for the administrator account of VM-Series"
            }
        },
        "storageAccountName": {
            "defaultValue": "azeasastdlrs018",
            "type": "string",
            "metadata": {
                "description": "Name prefix of the new storage account created to store the VM's disks"
            }
        },
        "sizeOfEachDataDiskInGB": {
            "defaultValue": 20,
            "type": "string",
            "metadata": {
                "description": "Size of the data disk in GB"
            }
        },
        "domainName": {
            "defaultValue": "acct.upmchs.net",
            "type": "string",
            "metadata": {
                "description": "The FQDN of the AD domain"
            }
        },
        "domainUsername": {
            "type": "string",
            "metadata": {
                "description": "Username of the account on the domain"
            }
        },
        "domainPassword": {
            "defaultValue": "",
            "type": "securestring",
            "metadata": {
                "description": "Password of the account on the domain"
            }
        },
        "ouPath": {
            "defaultValue": "OU=Computers,OU=AZURE MSCLOUD,DC=acct,DC=upmchs,DC=net",
            "type": "string",
            "metadata": {
                "description": "OU Path where the VM should reside"
            }
        }
    },
    "variables": {
        "fullVmName":"[parameters('vmName')]",
        "vnetID": "[resourceId(parameters('virtualNetworkResourceGroupName'),concat('Microsoft.Network','/','virtualNetworks'),parameters('virtualNetworkName'))]",
        "subnetRef": "[concat(variables('vnetID'),'/subnets/',parameters('subnetName'))]",
        "nicName": "[concat(variables('fullVmName'),'-NIC-01')]",
        "apiVersion": "2015-06-15",
        "vmStorageAccountContainerName": "iib-data-dsk"
    },
    "resources": [
        {
      "name": "[variables('nicName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig-mgmt",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    }, 
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('fullVmName')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[variables('fullVmName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "dataDisks": [
                        {
                            "name": "[concat(variables('fullVmName'), '-DSK-01')]",
                            "diskSizeGB": "[parameters('sizeOfEachDataDiskInGB')]",
                            "lun": 0,
                            "vhd": {
                                "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName')), variables('apiVersion')).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('fullVmName'),'-DSK-01.vhd')]"
                            },
                            "createOption": "Empty"
                        }
                    ],
                    "osDisk": {
                        "name": "[concat(variables('fullVmName'),'-osDisk')]",
                        "osType": "[parameters('osType')]",
                        "caching": "ReadWrite",
                        "image":{
                            "uri": "[parameters('ImageUri')]"
                        },
                        "vhd": {
                            "uri": "[concat('https://azeasastdlrs018.blob.core.windows.net/azure-dev-osdisks/', variables('fullVmName'), '-osdisk.vhd')]"
                        },
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": "true",
                        "storageUri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName')), '2016-01-01').primaryEndpoints.blob)]"
                    }
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
            ]
        },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('vmName'),'/joindomain')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "JsonADDomainExtension",
        "typeHandlerVersion": "1.3",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "Name": "[parameters('domainName')]",
          "OUPath": "[parameters('ouPath')]",
          "User": "[concat(parameters('domainName'), '\\', parameters('domainUsername'))]",
          "Restart": "true",
          "Options": 3
        },
        "protectedsettings": {
          "Password": "[parameters('domainPassword')]"
        }
      }
    }

    ]
}
